{"version":3,"sources":["components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","components/UI/Spinner/Spinner.js","components/UI/Spinner/Spinner.module.css","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/UI/Modal/Modal.module.css","components/UI/Button/Button.module.css","hoc/withErrorHandler/withErrorHandler.js","components/Burger/Burger.module.css","components/Burger/Ingredient/Ingredient.module.css","components/Burger/Ingredient/Ingredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControls.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css"],"names":["BuildControl","props","className","classes","Label","label","Less","onClick","remove","disabled","More","add","controls","type","BuildControls","price","toFixed","map","ctrl","key","OrderButton","purchaseable","ordered","isAuthenticated","OrderSummary","ingredientSummary","Object","keys","this","ingredients","igKey","i","style","textTransform","Auxiliary","Button","btnType","clicked","purchaseCancel","purchaseContinue","Component","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","purchasing","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","totalPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","values","reduce","sum","el","purchaseHandler","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","pathname","initIngredients","disabledInfo","ings","orderSummary","burger","error","Spinner","Burger","addIngredient","removeIngredient","Modal","show","modalClosed","connect","burgerBuilder","auth","token","dispatch","ingredientName","actions","path","withErrorHandler","axiosOrders","loader","module","exports","nextProps","nextState","children","transform","opacity","join","WrappedComponent","axios","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","err","eject","message","Ingredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","transformedIngredients","Array","_","arr","concat","length"],"mappings":"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","file":"static/js/4.09c40396.chunk.js","sourcesContent":["import React from 'react'\r\nimport classes from './BuildControl.module.css'\r\n\r\nconst BuildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button \r\n            className={classes.Less}\r\n            onClick={props.remove}\r\n            disabled={props.disabled}>\r\n            \r\n                Less\r\n        </button>\r\n        <button \r\n            className={classes.More}\r\n            onClick={props.add}>\r\n                More\r\n        </button>\r\n    </div>\r\n)\r\n\r\nexport default BuildControl;\r\n","import React from 'react'\r\nimport classes from './BuildControls.module.css'\r\nimport BuildControl from './BuildControl/BuildControl'\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad'},\r\n    { label: 'Bacon', type: 'bacon'},\r\n    { label: 'Cheese', type: 'cheese'},\r\n    { label: 'Meat', type: 'meat'},\r\n]\r\n\r\nconst BuildControls = (props) =>(\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label}\r\n                add={() => props.add(ctrl.type)}\r\n                remove={() => props.remove(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]}/>\r\n        ))}\r\n        <button \r\n            className={classes.OrderButton}\r\n            disabled={!props.purchaseable}\r\n            onClick={props.ordered}>\r\n                {props.isAuthenticated ? 'ORDER NOW' : 'SIGN UP TO ORDER'}\r\n        </button>\r\n    </div>\r\n)\r\n\r\nexport default BuildControls;\r\n","import React, { Component } from 'react'\r\nimport Auxiliary from '../../../hoc/Auxiliary/Auxiliary'\r\nimport Button from '../../UI/Button/Button'\r\n\r\nclass OrderSummary extends Component {\r\n    // componentWillUpdate() {\r\n    //     console.log('[OrderSummary] WillUpdate')\r\n    // }\r\n\r\n    render() {\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n            .map((igKey,i) => {\r\n            return (\r\n                <li key={igKey+i}>\r\n                    <span style={{textTransform: 'capitalize'}}>{igKey}</span> : {this.props.ingredients[igKey]}\r\n                </li>\r\n            )\r\n        });\r\n        return (\r\n            <Auxiliary>\r\n                <h3>Your Order:</h3>\r\n                <p>A delicious burger with the following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p>Total Price: {this.props.price}</p>\r\n                <p>Continue to Checkout?</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancel}>CANCEL</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinue}>CONTINUE</Button>\r\n            </Auxiliary>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OrderSummary;\r\n","import React, { Component } from 'react'\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary'\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\nimport axiosOrders from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\n\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nexport class BurgerBuilder extends Component {\r\n    state = {\r\n        // ingredients: null,\r\n        // totalPrice: 4,\r\n        // purchaseable: false,\r\n        purchasing: false,\r\n        // loading: false,\r\n        // error: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.initIngredients();\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        \r\n        let updatedIngredients = {...this.state.ingredients}\r\n        updatedIngredients[type] = updatedCount;\r\n        \r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        \r\n\r\n        this.setState({\r\n            ingredients: updatedIngredients,\r\n            totalPrice: newPrice\r\n        })\r\n\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n    removeIngredientHandler = (type) => {\r\n        \r\n        if(this.state.ingredients[type] === 0) {\r\n            return;\r\n        }\r\n        let updatedIngredients = {...this.state.ingredients}\r\n        \r\n        updatedIngredients[type] -= 1;\r\n\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        let newPrice = oldPrice - priceDeduction;\r\n\r\n        \r\n        this.setState({\r\n            ingredients: updatedIngredients,\r\n            totalPrice: newPrice\r\n        })\r\n\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    updatePurchaseState = (ingredients) => {\r\n        const sum = Object.values(ingredients)\r\n            .reduce((sum, el) => sum += el, 0);\r\n        // console.log(sum);    \r\n        return  sum > 0;\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        if (this.props.isAuthenticated) {\r\n            this.setState({\r\n                purchasing: true\r\n            });\r\n        } else {\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n        \r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({\r\n            purchasing: false\r\n        });\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        // const queryParams = [];\r\n        // for (let i in this.props.ings) {\r\n        //     queryParams.push(encodeURIComponent(i) +  '=' + encodeURIComponent(this.props.ings[i]));\r\n        // }\r\n        // queryParams.push('price=' + this.state.totalPrice);\r\n\r\n        // const queryString = queryParams.join('&')\r\n        this.props.onInitPurchase();\r\n        this.props.history.push({\r\n            pathname: '/checkout',\r\n            // search: '?' + queryString\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo ={\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        let orderSummary = null;\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded</p> : <Spinner/>;\r\n            \r\n        if (this.props.ings) {\r\n            burger = \r\n                <Auxiliary>\r\n                    <Burger ingredients={this.props.ings}/>\r\n                    <BuildControls \r\n                        add={this.props.addIngredient} \r\n                        remove={this.props.removeIngredient}\r\n                        disabled={disabledInfo}\r\n                        price={this.props.totalPrice}\r\n                        purchaseable={this.updatePurchaseState(this.props.ings)}\r\n                        ordered={this.purchaseHandler}\r\n                        isAuthenticated={this.props.isAuthenticated}/>\r\n                </Auxiliary>;\r\n\r\n             orderSummary = \r\n                <OrderSummary \r\n                    ingredients={this.props.ings}\r\n                    purchaseCancel={this.purchaseCancelHandler}\r\n                    purchaseContinue={this.purchaseContinueHandler}\r\n                    price={this.props.totalPrice.toFixed(2)}\r\n                />;\r\n        }\r\n\r\n        // if (this.state.loading) {\r\n        //     orderSummary = <Spinner/>;\r\n        // }\r\n\r\n        return (\r\n            <Auxiliary>\r\n                <Modal \r\n                    show={this.state.purchasing} \r\n                    modalClosed={this.purchaseCancelHandler}>\r\n                        {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Auxiliary>\r\n        )\r\n    }\r\n}\r\n\r\n// ---------------- REDUX CONFIGURATION  ---------------- \r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        totalPrice: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !== null\r\n     }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addIngredient: (ingredientName) => dispatch(actions.addIngredient(ingredientName)),\r\n        removeIngredient: (ingredientName) => dispatch(actions.removeIngredient(ingredientName)),\r\n        initIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axiosOrders));\r\n","import React from 'react'\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = props => (\r\n    <div className={classes.loader}>Loading...</div>\r\n);\r\n\r\nexport default Spinner\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__JqLsB\",\"load6\":\"Spinner_load6__axrju\",\"round\":\"Spinner_round__17wmP\"};","import React, {Component} from 'react'\r\nimport classes from './Modal.module.css'\r\nimport Auxiliary from '../../../hoc/Auxiliary/Auxiliary'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\n\r\nclass Modal extends Component {\r\n    // Performance fix, to not uneccessarily render the modal and its components\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        // only update when showing or hiding the modal\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    // componentWillUpdate() {\r\n    //     console.log('[Modal] WillUpdate')\r\n    // }\r\n    \r\n    render() {\r\n    return (\r\n        <Auxiliary>\r\n            <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n            <div \r\n                className={classes.Modal}\r\n                style={{\r\n                    transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                    opacity: this.props.show ? '1' : '0'\r\n                    \r\n                }}>\r\n                {this.props.children}\r\n            </div>\r\n        </Auxiliary>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react'\r\nimport classes from './Button.module.css'\r\n\r\nconst Button = (props) => (\r\n    <button \r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}\r\n        disabled={props.disabled}>\r\n            {props.children}\r\n    </button>\r\n)\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__20bxc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3HRBy\",\"Success\":\"Button_Success__zyN8J\",\"Danger\":\"Button_Danger__3_TiA\"};","import React, { Component } from 'react'\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Auxiliary from '../Auxiliary/Auxiliary';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component{\r\n        state = {\r\n            error: null\r\n        }\r\n        componentWillMount() {\r\n            // clear error on request\r\n            this.reqInterceptor = axios.interceptors.request.use(\r\n                req => {\r\n                    this.setState({ error: null})\r\n                    return req;\r\n                }\r\n            )\r\n            // set error on response\r\n            this.resInterceptor = axios.interceptors.response.use(\r\n                res => res,\r\n                err => {\r\n                    this.setState({\r\n                        error: err\r\n                    })\r\n                }\r\n            )\r\n        }\r\n        \r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.request.eject(this.resInterceptor);\r\n        }\r\n        errorConfirmedHandler = () => {\r\n            this.setState({\r\n                error: null\r\n            });\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Auxiliary>\r\n                    <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}\r\n                    >\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Auxiliary>\r\n            );\r\n        }\r\n       \r\n    }\r\n}\r\n\r\nexport default withErrorHandler\r\n ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__c9Ic3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"Ingredient_BreadBottom__3R5in\",\"BreadTop\":\"Ingredient_BreadTop__3yAaP\",\"Seeds1\":\"Ingredient_Seeds1__1lfJT\",\"Seeds2\":\"Ingredient_Seeds2__3HR5d\",\"Meat\":\"Ingredient_Meat__spgjr\",\"Cheese\":\"Ingredient_Cheese__3QKZf\",\"Salad\":\"Ingredient_Salad__3OsWS\",\"Bacon\":\"Ingredient_Bacon__3vgZG\"};","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport classes from './Ingredient.module.css';\r\n\r\nclass Ingredient extends Component{\r\n    state = {\r\n        ingredient: null\r\n    }\r\n    render() {\r\n        switch (this.props.type) {\r\n            case('bread-bottom'):\r\n                this.ingredient = (<div className={classes.BreadBottom}></div>);\r\n                break;\r\n            case('bread-top'):\r\n                this.ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>);\r\n                break;\r\n            case('meat'):\r\n                this.ingredient = (\r\n                    <div className={classes.Meat}></div>);\r\n                break;\r\n            case('cheese'):\r\n                this.ingredient = (\r\n                    <div className={classes.Cheese}></div>);\r\n                break;\r\n            case('salad'):\r\n                this.ingredient = (\r\n                    <div className={classes.Salad}></div>);\r\n                break;\r\n            case('bacon'):\r\n                this.ingredient = (\r\n                    <div className={classes.Bacon}></div>);\r\n                break;\r\n            default:\r\n                this.ingredient = null\r\n        }\r\n        return this.ingredient;\r\n    }   \r\n}\r\n\r\nIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Ingredient;\r\n","import React from 'react'\r\nimport classes from './Burger.module.css'\r\nimport Ingredient from './Ingredient/Ingredient'\r\n// import {withRouter} from 'react-router-dom';\r\n\r\nconst Burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n                return (<Ingredient key={igKey + i} type={igKey}/>)\r\n            })\r\n        }).reduce((arr, el) => { // flatten array\r\n            return arr.concat(el);\r\n        }, []);\r\n\r\n    \r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please start adding ingredients</p>\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <Ingredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <Ingredient type=\"bread-bottom\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Burger;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__3W_YJ\",\"OrderButton\":\"BuildControls_OrderButton__2AqST\",\"enable\":\"BuildControls_enable__3htmG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__1vT6n\",\"Label\":\"BuildControl_Label__WN21C\",\"Less\":\"BuildControl_Less__Bq_zg\",\"More\":\"BuildControl_More__N7OA1\"};"],"sourceRoot":""}