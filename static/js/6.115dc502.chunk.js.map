{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js","components/UI/Spinner/Spinner.js","components/UI/Spinner/Spinner.module.css","components/UI/Modal/Modal.js","components/UI/Modal/Modal.module.css","hoc/withErrorHandler/withErrorHandler.js"],"names":["module","exports","Order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","key","className","classes","Number","parseFloat","price","toFixed","Orders","this","fetchOrders","token","userId","orders","order","id","loading","Spinner","Component","connect","state","auth","dispatch","orderActions","withErrorHandler","axiosOrders","loader","Modal","nextProps","nextState","show","children","clicked","modalClosed","transform","opacity","WrappedComponent","axios","error","errorConfirmedHandler","setState","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","err","eject","message"],"mappings":"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","file":"static/js/6.115dc502.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3420K\"};","import React from 'react'\r\nimport classes from './Order.module.css'\r\n\r\nconst Order = (props) => {\r\n\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push({\r\n            name: ingredientName,\r\n            amount :props.ingredients[ingredientName]\r\n        });\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span \r\n                style={{textTransform: 'capitalize', display: 'inline-block', margin: '0 8px', border: '1px solid #ccc'}}\r\n                key={ig.name}>{ig.name} ({ig.amount})</span>\r\n    })\r\n    \r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Order;\r\n","import React, { Component } from 'react'\r\nimport Order from '../../components/Order/Order';\r\nimport axiosOrders from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport { connect } from 'react-redux';\r\nimport * as orderActions from '../../store/actions/index';\r\n\r\nexport class Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render() {\r\n        let orders = this.props.orders.map(order => {\r\n            return <Order \r\n                        key={order.id} \r\n                        ingredients={order.ingredients} \r\n                        price={order.price}/>\r\n        });\r\n        if (this.props.loading) {\r\n            orders = <Spinner/>\r\n        }\r\n\r\n        return orders;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.order.loading,\r\n        orders: state.order.orders,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchOrders: (token, userId) => dispatch(orderActions.fetchOrders(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axiosOrders));\r\n","import React from 'react'\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = props => (\r\n    <div className={classes.loader}>Loading...</div>\r\n);\r\n\r\nexport default Spinner\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__JqLsB\",\"load6\":\"Spinner_load6__axrju\",\"round\":\"Spinner_round__17wmP\"};","import React, {Component} from 'react'\r\nimport classes from './Modal.module.css'\r\nimport Auxiliary from '../../../hoc/Auxiliary/Auxiliary'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\n\r\nclass Modal extends Component {\r\n    // Performance fix, to not uneccessarily render the modal and its components\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        // only update when showing or hiding the modal\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    // componentWillUpdate() {\r\n    //     console.log('[Modal] WillUpdate')\r\n    // }\r\n    \r\n    render() {\r\n    return (\r\n        <Auxiliary>\r\n            <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n            <div \r\n                className={classes.Modal}\r\n                style={{\r\n                    transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                    opacity: this.props.show ? '1' : '0'\r\n                    \r\n                }}>\r\n                {this.props.children}\r\n            </div>\r\n        </Auxiliary>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__20bxc\"};","import React, { Component } from 'react'\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Auxiliary from '../Auxiliary/Auxiliary';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component{\r\n        state = {\r\n            error: null\r\n        }\r\n        componentWillMount() {\r\n            // clear error on request\r\n            this.reqInterceptor = axios.interceptors.request.use(\r\n                req => {\r\n                    this.setState({ error: null})\r\n                    return req;\r\n                }\r\n            )\r\n            // set error on response\r\n            this.resInterceptor = axios.interceptors.response.use(\r\n                res => res,\r\n                err => {\r\n                    this.setState({\r\n                        error: err\r\n                    })\r\n                }\r\n            )\r\n        }\r\n        \r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.request.eject(this.resInterceptor);\r\n        }\r\n        errorConfirmedHandler = () => {\r\n            this.setState({\r\n                error: null\r\n            });\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Auxiliary>\r\n                    <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}\r\n                    >\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Auxiliary>\r\n            );\r\n        }\r\n       \r\n    }\r\n}\r\n\r\nexport default withErrorHandler\r\n "],"sourceRoot":""}