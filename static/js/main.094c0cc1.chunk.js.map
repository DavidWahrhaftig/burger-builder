{"version":3,"sources":["store/actions/actionTypes.js","axios-orders.js","components/Navigation/SideDrawer/SideDrawer.module.css","hoc/Auxiliary/Auxiliary.js","store/actions/order.js","components/Navigation/Toolbar/Toolbar.module.css","shared/utility.js","components/Navigation/NavItems/NavItem/NavItem.module.css","store/actions/burgerBuilder.js","store/actions/auth.js","components/UI/Backdrop/Backdrop.js","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavItems/NavItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Logo/Logo.js","components/Navigation/NavItems/NavItem/NavItem.js","components/Navigation/NavItems/NavItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","hoc/asyncComponent/asyncComponent.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_BURGER_START","PURCHASE_INIT","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","FETCH_ORDERS_START","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","instance","axios","create","baseURL","module","exports","Auxiliary","props","children","purchaseInit","type","actionTypes","purchaseBurger","orderData","token","dispatch","axiosOrders","post","then","response","id","orderId","purchaseBurgerSuccess","data","name","catch","error","purchaseBurgerFail","fetchOrders","userId","queryParams","get","orders","fetchedOrders","key","push","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","addIngredient","ingredient","removeIngredient","initIngredients","res","ingredients","authSucces","idToken","logout","localStorage","removeItem","setAuthRedirectPath","path","authCheckState","getItem","expirationDate","Date","checkAuthTimeout","getTime","auth","email","password","isSignup","authData","returnSecureToken","url","expiresIn","setItem","localId","authFail","expirationTime","setTimeout","Backdrop","show","className","classes","onClick","clicked","Logo","src","burgerLogo","alt","NavItem","to","link","exact","activeClassName","active","NavItems","isAuthenticated","DrawerToggle","Toolbar","toggleSideDrawer","DesktopOnly","SideDrawer","close","Open","Close","join","Layout","state","showSideDrawer","closeSideDrawer","setState","prevState","this","Content","Component","connect","asyncComponent","importComponent","component","cmp","default","C","asyncBurgerBuilder","asyncCheckout","asyncOrders","asyncAuth","asyncLogout","App","onTryAuthSignup","routes","withRouter","authActions","Boolean","window","location","hostname","match","INGREDIENT_PRICES","salad","cheese","meat","bacon","initialState","totalPrice","building","action","updatedIngredient","updatedState","setIngredients","fetchIngredientsFailed","reducer","loading","purchased","purchaseBurgerStart","newOrder","fetchOrdersFail","fetchOrdersStart","fetchOrdersSuccess","authRedirectPath","authStart","message","replace","authSuccess","authLogout","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilder","burgerBuilderReducer","order","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.094c0cc1.chunk.js","sourcesContent":["export const ADD_INGREDIENT = 'ADD_INGREDIENT',\r\n             REMOVE_INGREDIENT = 'REMOVE_INGREDIENT',\r\n             SET_INGREDIENTS = 'SET_INGREDIENTS',\r\n             FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS'\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL'\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START'\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT'\r\n\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS'\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL'\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START'\r\nexport const SET_ORDERS = 'SET_ORDERS'\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\r\n// export const \r\n","import axios from 'axios';\r\n\r\nlet instance =  axios.create({\r\n    baseURL: 'https://react-burger-builder-7d7ed.firebaseio.com/'\r\n});\r\n\r\nexport default instance;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1TEVM\",\"Open\":\"SideDrawer_Open__1oLPI\",\"Close\":\"SideDrawer_Close__35bUz\",\"Logo\":\"SideDrawer_Logo__3nSgF\"};","\r\nconst Auxiliary = (props) => props.children; \r\n\r\nexport default Auxiliary;","import * as actionTypes from './actionTypes';\r\nimport axiosOrders from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData\r\n\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n\r\n    }\r\n}\r\n\r\n// export const setOrders = (orders) => {\r\n//     return {\r\n//         type: actionTypes.SET_ORDERS,\r\n//         orders\r\n//     }\r\n// }\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n}\r\n\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders\r\n    }\r\n}\r\n\r\n\r\nexport const fetchOrdersFail = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        orders\r\n    }\r\n}\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\n\r\n// asynchornous actions\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axiosOrders.post('/orders.json?auth=' + token, orderData)\r\n            .then(response => {\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n            }).catch(error => {\r\n               dispatch(purchaseBurgerFail(error));\r\n            });\r\n    }\r\n}\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n        // console.log(queryParams);\r\n        axiosOrders.get('/orders.json' + queryParams)\r\n            .then(response => {\r\n                const fetchedOrders = [];\r\n                for (let key in response.data) {\r\n                    fetchedOrders.push({\r\n                        ...response.data[key], \r\n                        id: key\r\n                    });\r\n                }  \r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            }).catch(error => {\r\n                dispatch(fetchOrdersFail(error));\r\n            });\r\n    }\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2pGN9\",\"Logo\":\"Toolbar_Logo__1IsFj\",\"DesktopOnly\":\"Toolbar_DesktopOnly__BPQRJ\"};","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}\r\n\r\nexport const checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n    if (rules.required) {\r\n        isValid = value.trim() !== '';\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = isValid && value.length >= rules.minLength;\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = isValid && value.length <= rules.maxLength\r\n    }\r\n\r\n    // if (rules.isEmail) {\r\n    //     const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9]\r\n    // }\r\n\r\n    return isValid;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItem\":\"NavItem_NavItem__31Two\",\"active\":\"NavItem_active__3LLpC\"};","import * as actionTypes from './actionTypes';\r\nimport axiosOrders from '../../axios-orders'\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredient: name\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredient: name\r\n    }\r\n}\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\n// asynchronous action\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axiosOrders.get('https://react-burger-builder-7d7ed.firebaseio.com/ingredients.json')\r\n            .then(res => {\r\n                // console.log(res.data);\r\n                dispatch(setIngredients(res.data));\r\n            }).catch(error => {\r\n                // console.log(error);\r\n                // this.setState({error: true})\r\n                dispatch(fetchIngredientsFailed())\r\n            })\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\nexport const authSucces = (idToken, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken,\r\n        userId\r\n\r\n    };\r\n};\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    \r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path\r\n    }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (! token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate > new Date()) {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSucces(token, userId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/1000))\r\n            } else {\r\n                dispatch(logout());\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// asynchronous actions\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAy5ZuguWLReJMqhkZrwrFCtCfjVDGbvYs';\r\n        if (!isSignup) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAy5ZuguWLReJMqhkZrwrFCtCfjVDGbvYs';\r\n        }\r\n        axios.post(url, authData)\r\n            .then(res => {\r\n                // console.log(res);\r\n                const expirationDate = new Date(new Date().getTime() + res.data.expiresIn * 1000);\r\n                localStorage.setItem('token', res.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', res.data.localId)\r\n                dispatch(authSucces(res.data.idToken, res.data.localId));\r\n                dispatch(checkAuthTimeout(res.data.expiresIn));\r\n            })\r\n            .catch(error => {\r\n                // console.log(error.response)\r\n                dispatch(authFail(error.response.data.error));\r\n            });\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000)\r\n    }\r\n}","import React from 'react'\r\nimport classes from './Backdrop.module.css'\r\n\r\nconst Backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n)\r\n\r\nexport default Backdrop;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3vYF7\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__tbK7v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItems\":\"NavItems_NavItems__2WuSP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__1xb6M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1IJyj\"};","import React from 'react'\r\nimport burgerLogo from '../../assets/images/burger-logo.png'\r\nimport classes from './Logo.module.css'\r\n\r\nconst Logo = (props) => (\r\n    <div className={classes.Logo}>\r\n        <img src={burgerLogo} alt=\"BurgerBuilder\"/>\r\n    </div>\r\n)\r\n\r\nexport default Logo\r\n","import React from 'react';\r\nimport classes from './NavItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NavItem = props => (\r\n    <li className={classes.NavItem}>\r\n        <NavLink \r\n            to={props.link}\r\n            exact\r\n            activeClassName={classes.active}>\r\n                {props.children}\r\n            \r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\n\r\nexport default NavItem\r\n","import React from 'react'\r\nimport NavItem from './NavItem/NavItem'\r\nimport classes from './NavItems.module.css'\r\n\r\nconst NavItems = props => (\r\n    <ul className={classes.NavItems}>\r\n        <NavItem link=\"/\">Burger Builder</NavItem>\r\n        {props.isAuthenticated ? <NavItem link=\"/orders\">Orders</NavItem> : null}\r\n        {props.isAuthenticated \r\n            ? <NavItem link=\"/logout\">Logout</NavItem>\r\n            : <NavItem link=\"/auth\">Authenticate</NavItem>}\r\n    </ul>\r\n)\r\n\r\n\r\nexport default NavItems;\r\n","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst DrawerToggle = props => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\n\r\nexport default DrawerToggle\r\n","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavItems from '../NavItems/NavItems'\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst Toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.toggleSideDrawer}/>\r\n        <div className={classes.Logo}>\r\n            <Logo/>\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavItems isAuthenticated={props.isAuthenticated}/>\r\n        </nav>\r\n    </header>\r\n)\r\n\r\nexport default Toolbar;\r\n","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavItems from '../NavItems/NavItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Auxuiliary from '../../../hoc/Auxiliary/Auxiliary'\r\n\r\nconst SideDrawer = props => {\r\n    return (\r\n        <Auxuiliary>\r\n            <Backdrop show={props.show} clicked={props.close}/>\r\n            <div className={[classes.SideDrawer, props.show ? classes.Open : classes.Close].join(' ')} onClick={props.close}>\r\n                <div className={classes.Logo}>\r\n                    <Logo/>\r\n                </div>\r\n                <nav>\r\n                    <NavItems isAuthenticated={props.isAuthenticated}/>\r\n                </nav>\r\n            </div>\r\n        </Auxuiliary>\r\n    );\r\n}\r\n\r\n\r\nexport default SideDrawer;\r\n","import React, { Component } from 'react'\r\nimport Auxiliary from '../Auxiliary/Auxiliary';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    closeSideDrawer = () => {\r\n        this.setState({\r\n            showSideDrawer: false\r\n        })\r\n    }\r\n\r\n    toggleSideDrawer = () => {\r\n        this.setState( ( prevState ) => {\r\n            return {showSideDrawer: !prevState.SideDrawer}\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <Auxiliary>\r\n                <Toolbar \r\n                    toggleSideDrawer={this.toggleSideDrawer} \r\n                    isAuthenticated={this.props.isAuthenticated}\r\n                />\r\n                <SideDrawer \r\n                    show={this.state.showSideDrawer} \r\n                    close={this.closeSideDrawer}\r\n                    isAuthenticated={this.props.isAuthenticated}\r\n                />\r\n                <main className={classes.Content}>{this.props.children}</main>\r\n            </Auxiliary>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n\r\n","import React, { Component } from 'react'\r\n\r\nconst asyncComponent = (importComponent) => {\r\n    return class extends Component {\r\n        state = {\r\n            component: null\r\n        }\r\n        componentDidMount () {\r\n            importComponent()\r\n                .then (cmp => {\r\n                    this.setState({component:cmp.default});\r\n                });\r\n        }\r\n        render () {\r\n            const C = this.state.component\r\n            return C ? <C {...this.props} /> : null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default asyncComponent\r\n","import React, {Component} from 'react';\r\nimport Layout from './hoc/Layout/Layout';\r\n// import BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\r\n// import Checkout from './containers/Checkout/Checkout';\r\n// import Orders from './containers/Orders/Orders'\r\n// import Auth from './containers/Auth/Auth';\r\n// import Logout from './containers/Auth/Logout/Logout';\r\nimport {Route, Switch, withRouter, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport * as authActions from './store/actions/index';\r\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\r\n\r\n// loading components lazyly \r\nconst asyncBurgerBuilder = asyncComponent(() => import('./containers/BurgerBuilder/BurgerBuilder') );\r\nconst asyncCheckout = asyncComponent(() => import('./containers/Checkout/Checkout') );\r\nconst asyncOrders = asyncComponent(() => import('./containers/Orders/Orders') );\r\nconst asyncAuth = asyncComponent(() => import('./containers/Auth/Auth') );\r\nconst asyncLogout = asyncComponent(() => import('./containers/Auth/Logout/Logout') );\r\n\r\nclass App extends Component {\r\n    \r\n    componentDidMount() {\r\n        this.props.onTryAuthSignup();\r\n    }\r\n\r\n    render() {\r\n\r\n        let routes = (\r\n            <Switch>\r\n                <Route path=\"/auth\" component={asyncAuth}/>\r\n                <Route path=\"/\" exact component={asyncBurgerBuilder}/>\r\n                {/* For any unknown routes, redirect to '/' */}\r\n                <Redirect to=\"/\"/>\r\n            </Switch>\r\n        );\r\n\r\n        if (this.props.isAuthenticated) {\r\n            routes = (\r\n                <Switch>\r\n                    <Route path=\"/checkout\" component={asyncCheckout}/>\r\n                    <Route path=\"/orders\" component={asyncOrders}/>\r\n                    <Route path=\"/logout\" component={asyncLogout}/>\r\n                    <Route path=\"/auth\" component={asyncAuth}/>\r\n                    <Route path=\"/\" exact component={asyncBurgerBuilder}/>\r\n                    {/* For any unknown routes, redirect to '/' */}\r\n                    <Redirect to=\"/\"/>\r\n                </Switch>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Layout>\r\n                    {routes}\r\n                </Layout>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onTryAuthSignup: () => dispatch(authActions.authCheckState())\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n}\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = { [action.ingredient]: state.ingredients[action.ingredient] + 1}\r\n    \r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient); \r\n    const updatedState = {\r\n        ingredients: updatedIngredients, \r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredient],\r\n        building: true\r\n    }\r\n    return updateObject(state, updatedState);    \r\n}\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIngredient = { [action.ingredient]: state.ingredients[action.ingredient] - 1}\r\n    \r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient); \r\n    const updatedState = {\r\n        ingredients: updatedIngredients, \r\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredient],\r\n        building: true\r\n    }\r\n    return updateObject(state, updatedState);    \r\n}\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: action.ingredients,\r\n        totalPrice: 4,\r\n        error: false,\r\n        building: false\r\n    });\r\n}\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject(state, {error: true});\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    \r\n    switch(action.type) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state,action);\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state, {loading: true});\r\n}\r\nconst purchaseBurgerFail = (state, action) => {\r\n    return updateObject(state, {loading: false});\r\n}\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const newOrder = updateObject(action.orderData, {id: action.orderId});\r\n    return updateObject(state, {\r\n        loading: false,\r\n        orders: [...state.orders, newOrder],\r\n        purchased: true\r\n    });\r\n}\r\n\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, {purchased: false});\r\n}\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n    return updateObject(state, {loading: false});\r\n}\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n    return updateObject(state, {loading: true});\r\n}\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n    return updateObject(state, {loading: false, orders: action.orders});\r\n}\r\n\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action);\r\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state,action);\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\r\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action);\r\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action);\r\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state, action);\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {loading: true, error: null})\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    const error = action.error;\r\n    error.message = error.message.replace('_', ' ');\r\n    return updateObject(state, {loading: false, error})\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: null, \r\n        token: action.idToken, \r\n        userId: action.userId\r\n    });\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null,\r\n        userId: null\r\n    });\r\n}\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, {\r\n        authRedirectPath: action.path\r\n    })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    \r\n    switch(action.type) {\r\n        case actionTypes.AUTH_START: return authStart(state, action)\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action)\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action)\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action)\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action)\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware, compose, combineReducers} from 'redux';\r\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\r\nimport orderReducer from './store/reducers/order';\r\nimport authReducer from './store/reducers/auth'\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\r\nconst rootReducer = combineReducers({\r\n    burgerBuilder: burgerBuilderReducer,\r\n    order: orderReducer,\r\n    auth: authReducer\r\n});\r\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  ));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter basename=\"/burger-builder\">\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}